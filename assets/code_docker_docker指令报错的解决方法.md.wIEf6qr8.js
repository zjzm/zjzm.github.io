import{_ as e,c as o,o as r,a4 as t}from"./chunks/framework.qL1yNBZ5.js";const c="/assets/image-1716391455162.DabexZdk.png",h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"code/docker/docker指令报错的解决方法.md","filePath":"code/docker/docker指令报错的解决方法.md"}'),s={name:"code/docker/docker指令报错的解决方法.md"},a=t('<h2 id="原因分析" tabindex="-1">原因分析 <a class="header-anchor" href="#原因分析" aria-label="Permalink to &quot;原因分析&quot;">​</a></h2><p>安装完<strong>docker</strong>，运行指令时，出现了以下错误提示：</p><p><code>Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get &quot;http://%2Fvar%2Frun%2Fdocker.sock/v1.24/version&quot;: dial unix /var/run/docker.sock: connect: permission denied。意思是试图连接unix:///var/run/docker.sock:，但权限不够。</code></p><p>如下图所示：</p><p><img src="'+c+'" alt="file"><strong>原因分析</strong>：这是因为你当前的用户没有这个权限。默认情况下，<a href="https://so.csdn.net/so/search?q=docker&amp;spm=1001.2101.3001.7020" target="_blank" rel="noreferrer">docker</a> 命令会使用 Unix socket 与 Docker 引擎通讯。而只有 root 用户和 docker 组的用户才可以访问 Docker 引擎的 Unix socket。出于安全考虑，一般 Linux 系统上不会直接使用 root 用户。即我们当前的用户不是root用户。</p><p><strong>解决办法</strong>：把我们当前的用户添加到docker组中就可以了，这样他们就是一家人了。</p><blockquote><p>如果不成功的话，切换到root下面执行以下<a href="https://so.csdn.net/so/search?q=%E5%91%BD%E4%BB%A4&amp;spm=1001.2101.3001.7020" target="_blank" rel="noreferrer">命令</a>：<code>su root</code></p></blockquote><ol><li><p>第一步：<code>sudo gpasswd -a username docker</code> #将普通用户username加入到docker组中，username这个字段也可以直接换成$USER。</p></li><li><p>第二步：<code>newgrp docker</code> #更新docker组</p></li><li><p>第三步：再执行你报错的命令，此时就不会报错了。</p></li></ol>',8),n=[a];function d(i,p,_,k,l,u){return r(),o("div",null,n)}const g=e(s,[["render",d]]);export{h as __pageData,g as default};
